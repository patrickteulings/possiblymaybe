{"version":3,"file":"script.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;ACAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,4BAA4B;AAC5C;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA,gBAAgB,YAAY,MAAM,8DAAW;AAC7C;AACA;AACA;AACA;AACA;AACgB;;;;;;;;;;;;;;;AC7ChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,YAAY;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACwB;;;;;;;;;;;;;;;AC/BT;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC,8BAA8B,UAAU,oCAAoC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6B;;;;;;;;;;;;;;;ACtB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,IAAI,kCAAkC;AAC/C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,IAAI,gCAAgC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,IAAI,6BAA6B;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,IAAI,6BAA6B;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACyB;;;;;;;;;;;;;;;ACrFzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkB;;;;;;;;;;;;;;;ACZlB;AACA;AACA;AACA,gHAAgH,YAAY,GAAG;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC2B;;;;;;;UCtD5B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACN8B;AACkC;AACP;AACM;AACtB;AACgB;AACb;AAC5C;AACA;AACA,eAAe,6EAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wEAAiB;AACnD;AACA;AACA,eAAe,kEAAa;AAC5B;AACA;AACA;AACA;AACA,6EAA6E,kDAAI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qDAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kEAAY;AAC1C;AACA","sources":["webpack://possiblymaybe/./src/styles/app.scss?df0f","webpack://possiblymaybe/./src/scripts/components/Hero.ts","webpack://possiblymaybe/./src/scripts/components/HomepageHero.ts","webpack://possiblymaybe/./src/scripts/utilities/ImageLoader.ts","webpack://possiblymaybe/./src/scripts/utilities/InstaExtention.ts","webpack://possiblymaybe/./src/scripts/utilities/Intersection.ts","webpack://possiblymaybe/./src/scripts/utilities/Italic.ts","webpack://possiblymaybe/./src/scripts/utilities/NavigationToggle.ts","webpack://possiblymaybe/webpack/bootstrap","webpack://possiblymaybe/webpack/runtime/define property getters","webpack://possiblymaybe/webpack/runtime/hasOwnProperty shorthand","webpack://possiblymaybe/webpack/runtime/make namespace object","webpack://possiblymaybe/./src/scripts/app.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import ImageLoader from '../utilities/ImageLoader';\nclass Hero {\n    constructor(_elem) {\n        console.log(_elem);\n        this.elem = _elem;\n        this.data = _elem.dataset;\n        this.config = JSON.parse(this.data.config);\n        this.imagePath = this.config.imagePath;\n        this.loadBar = document.querySelector('.js-hero-loader__progress');\n        this.loadContainer = document.querySelector('.js-hero-loader');\n        this.imageContainer = document.querySelector('.js-hero-loader__image-wrapper');\n        this.image = this.elem.querySelector('.js-hero-loader__image');\n        this.loadImage();\n    }\n    handleProgress(e) {\n        const { received, length, loading } = e.detail;\n        const { scope } = e;\n        console.log('dd');\n        scope.setProgressbarValue(e.detail);\n    }\n    handleLoaded(e) {\n        const { scope } = e;\n        scope.setProgressbarValue(e.detail);\n        scope.hideLoader(e);\n    }\n    hideLoader(e) {\n        setTimeout(() => {\n            this.loadContainer.classList.add('is-loaded');\n        }, 500);\n        setTimeout(() => {\n            this.imageContainer.classList.add('is-loaded');\n        }, 1000);\n    }\n    setProgressbarValue(payload) {\n        const { received, length, loading } = payload;\n        const progress = ((received / length) * 100).toFixed(2);\n        this.loadBar.style.width = `${progress}%`;\n    }\n    async loadImage() {\n        const { loadImage } = new ImageLoader(this.imagePath, this.handleProgress, this.handleLoaded, this);\n        const theBlob = await loadImage(this.imagePath);\n        const elem = document.querySelector('.the_image');\n        this.image.src = theBlob;\n    }\n}\nexport { Hero };\n","const HomepageHero = (_elem) => {\n    const containerEl = document.querySelector('.animated-text--container');\n    const textElements = containerEl.getElementsByTagName('span');\n    let animInterval;\n    let count = 0;\n    if (!containerEl)\n        return;\n    // const config = JSON.parse(this.elem.dataset.config);\n    // const imagePath = this.config.imagePath\n    // const loadBar = document.querySelector('.hero--portfolio-item-loader__progress')\n    // const loadContainer = document.querySelector('.hero--portfolio-item-loader')\n    // const imageContainer = document.querySelector('.hero--portfolio-item__image')\n    // const image = this.elem.querySelector('.the_image'\n    const setActiveItem = (index) => {\n        containerEl.style.transform = `translateY(${index * 100}px)`;\n        for (const item of textElements) {\n            item.classList.remove('active');\n        }\n        textElements[index].classList.add('active');\n        count = (count > 2) ? 0 : count + 1;\n    };\n    const initialize = () => {\n        console.log('hii there', containerEl);\n        animInterval = setInterval(() => {\n            setActiveItem(count);\n        }, 2000);\n    };\n    return {\n        initialize\n    };\n};\nexport { HomepageHero };\n","export default function ImageLoader(rootUrl, _progressCallback, _finishedCallback, _scope) {\n    let results = null;\n    let error = null;\n    let loading = true;\n    const chunks = [];\n    const scope = _scope;\n    const progressCallBack = _progressCallback;\n    const finishedCallback = _finishedCallback;\n    // let controller = null; // We will get to this variable in a secondd\n    const loadImage = async (path, options) => {\n        try {\n            const response = await fetch(path, { ...options });\n            if (response.status >= 200 && response.status < 300) {\n                results = await readBodyResponse(response);\n                const bb = new Blob([new Uint8Array(results)]);\n                const objectURL = URL.createObjectURL(bb);\n                console.log(objectURL);\n                return objectURL;\n            }\n            else {\n                throw new Error('error');\n            }\n        }\n        catch (err) {\n            error = err;\n            results = null;\n            return error;\n        }\n        finally {\n            loading = false;\n        }\n    };\n    const readBodyResponse = async (response) => {\n        const reader = response.body.getReader();\n        const length = +response.headers.get('content-length');\n        // Declare received as 0 initially\n        let received = 0;\n        // Loop through the response stream and extract data chunks\n        while (loading) {\n            const { done, value } = await reader.read();\n            const payload = { detail: { received, length, loading, rootUrl }, scope };\n            if (done) {\n                // Finish loading\n                loading = false;\n                // Fired when reading the response body finishes\n                finishedCallback(payload);\n            }\n            else {\n                // Push values to the chunk array\n                chunks.push(value);\n                received += value.length;\n                // Fired on each .read() - progress tick\n                progressCallBack(payload, scope);\n            }\n        }\n        // Concat the chinks into a single array\n        const body = new Uint8Array(received);\n        let position = 0;\n        // Order the chunks by their respective position\n        for (const chunk of chunks) {\n            body.set(chunk, position);\n            position += chunk.length;\n        }\n        // Decode the response and return it\n        return body;\n    };\n    return { loadImage };\n}\n","/**\n * Extending the SBI Instagram feed plugin\n */\nclass InstaFeedExtended {\n    constructor(_elem) {\n        this.feedEl = _elem;\n        this.imageContainers = this.feedEl.querySelectorAll('.sbi_item');\n        this.initialize();\n    }\n    initialize() {\n        if (!this.imageContainers.length)\n            return;\n        for (const el of this.imageContainers) {\n            const img = el.getElementsByTagName('img')[0];\n            const alt = img.getAttribute('alt');\n            const captionElement = document.createElement('div');\n            captionElement.className = 'sbi_caption';\n            captionElement.innerHTML = (alt) ? alt : '';\n            el.appendChild(captionElement);\n        }\n    }\n}\nexport { InstaFeedExtended };\n","class IntersectTest {\n    // Constructor always gets called, pass initial params here\n    constructor() {\n        this.initialize();\n    }\n    initialize() {\n        const observer = new IntersectionObserver((entries, observer) => {\n            entries.forEach(entry => {\n                // const ratio = entry.intersectionRatio\n                // entry.target.dataset.test = ratioo\n                // console.log(ratio)\n                if (entry.isIntersecting) {\n                    entry.target.classList.add('is-intersected');\n                }\n                else {\n                    // entry.target.classList.remove('is-intersected')\n                }\n            });\n        }, { rootMargin: '-20px 0px 50px 0px' });\n        const el = document.querySelectorAll('.portfolio-item__image');\n        el.forEach((item) => {\n            observer.observe(item);\n        });\n        const navObserver = new IntersectionObserver((entries, observer) => {\n            entries.forEach(entry => {\n                const tt = entry;\n                if (entry.isIntersecting) {\n                    setTimeout(() => {\n                        entry.target.classList.add('make-visible');\n                    }, 1000);\n                    // entry.target.src = entry.target.dataset.src\n                    // observer.unobserve(entry.target)\n                }\n                else {\n                    // entry.target.classList.remove('make-visible')\n                }\n            });\n        }, { rootMargin: '0px 0px 50px 0px' });\n        const navEl = document.querySelector('.hero');\n        if (!navEl.classList.contains('hero--about')) {\n            navObserver.observe(navEl);\n        }\n        /**\n         * WORK OVERVIEW PAGE\n         */\n        const workObserver = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    entry.target.classList.add('in-view');\n                    // entry.target.src = entry.target.dataset.src\n                    // observer.unobserve(entry.target)\n                }\n                else {\n                    entry.target.classList.remove('in-view');\n                }\n            });\n        }, { rootMargin: '0% 0px 0% 0px' });\n        const workEl = document.querySelectorAll('.work-card--wrapper');\n        workEl.forEach((item) => {\n            console.log('item', item);\n            workObserver.observe(item);\n        });\n        console.log(workObserver);\n        /**\n         * ABOUT PAGE\n         */\n        const aboutObserver = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    entry.target.classList.add('in-view');\n                    // entry.target.src = entry.target.dataset.src\n                    // observer.unobserve(entry.target)\n                }\n                else {\n                    entry.target.classList.remove('in-view');\n                }\n            });\n        }, { rootMargin: '0% 0px 0% 0px' });\n        const aboutEl = document.querySelectorAll('.card--about');\n        aboutEl.forEach((item) => {\n            aboutObserver.observe(item);\n        });\n        // console.log(workObserver)\n    }\n}\nexport { IntersectTest };\n","class Italic {\n    constructor(_elem) {\n        this.elem = _elem;\n        this.italicElements = this.elem.getElementsByTagName('span');\n        this.setItalic();\n    }\n    setItalic() {\n        for (const item of this.italicElements) {\n            item.style.fontStyle = 'italic';\n        }\n    }\n}\nexport { Italic };\n","const NavigationToggle = ((_elem) => {\n    // Constructor always gets called, pass initial params here\n    let elem = _elem;\n    //let test = (_elem.dataset instanceof HTMLElement) ? (JSON.parse(_elem.dataset)) ? _elem.dataset.config : {config: {}} : {config: {}}\n    let test = _elem.dataset;\n    let nogiets = (test.config) ? test.config : '';\n    let config = JSON.parse(nogiets);\n    let trigger;\n    let target;\n    let activeClass = (config.activeClass) ? config.activeClass : '';\n    let isOpen = false;\n    const initialize = () => {\n        isOpen = (config.initialState.length >= 0 && config.initialState !== 'open');\n        trigger = (elem.querySelector(config.triggerName)) ?? elem;\n        target = (elem.querySelector(config.targetName)) ?? elem;\n        addEvents();\n    };\n    const addEvents = () => {\n        // const image = document.querySelector('.hero--portfolio-item__image')\n        trigger.onclick = (e) => toggleElement(e);\n        window.addEventListener('keydown', (e) => {\n            if (e.key.toLowerCase() === 'escape') {\n                closeElement();\n            }\n        });\n        // image.addEventListener('mouseover', () => {\n        //   this.handleHover();\n        // })\n        // image.addEventListener('mouseleave', () => {\n        //   this.handleLeave();\n        // })\n    };\n    const toggleElement = (e) => {\n        if (isOpen) {\n            closeElement();\n        }\n        else {\n            openElement();\n        }\n    };\n    const openElement = () => {\n        trigger.classList.add('is-open');\n        target.classList.add('is-open');\n        trigger.ariaExpanded = 'true';\n        isOpen = true;\n    };\n    const closeElement = () => {\n        trigger.classList.remove('is-open');\n        target.classList.remove('is-open');\n        trigger.ariaExpanded = 'false';\n        isOpen = false;\n    };\n    initialize();\n});\nexport { NavigationToggle };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './../styles/app.scss';\nimport { NavigationToggle } from './utilities/NavigationToggle';\nimport { IntersectTest } from './utilities/Intersection';\nimport { InstaFeedExtended } from './utilities/InstaExtention';\nimport { Hero } from './components/Hero';\nimport { HomepageHero } from './components/HomepageHero';\nimport { Italic } from './utilities/Italic';\nconst navigationToggles = document.querySelectorAll('[data-module=\"NavigationToggle\"]');\nfor (let navigationToggle of navigationToggles) {\n    let item = NavigationToggle(navigationToggle);\n}\n/**\n * EXTENDS THE instafeed plugin to add Captions\n */\nconst instaFeed = document.getElementById('sb_instagram');\nif (instaFeed) {\n    const instaFeedExtended = new InstaFeedExtended(instaFeed);\n    console.log(instaFeedExtended);\n}\nconst el = new IntersectTest();\n/**\n * PORTFOLIO ITEM HERO\n *\n */\nconst portfolioHero = (document.querySelector('[data-module=\"hero\"]')) ? new Hero(document.querySelector('[data-module=\"hero\"]')) : '';\nconsole.log(document.querySelector('[data-module=\"hero\"]'));\n/**\n * Italic words in headerss\n */\nconst italicHeaders = document.querySelectorAll('[data-module=\"italic\"]');\nfor (let item of italicHeaders) {\n    let italicItem = new Italic(item);\n}\n/**\n * HOMEPAGE ANIMATED TEXTT\n */\nconst homepageHero = document.querySelector('.js-homepage-hero');\nif (homepageHero) {\n    const heroAnimation = new HomepageHero(homepageHero);\n    heroAnimation.initialize();\n}\n"],"names":[],"sourceRoot":""}