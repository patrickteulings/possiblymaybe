{"version":3,"file":"app.css","mappings":";;;AAOA;EACE;EACA;EAEA;EACA;ACPF;ADaA;EACE;EACA;EAEA;EACA;ACZF;ADmBA;EACE;EACA;EAEA;EACA;AClBF;ADyBA;EACE;EACA;EAEA;EACA;ACxBF;AD+BA;EACE;EACA;EAEA;EACA;AC9BF;ADqCA;EACE;EACA;EAEA;EACA;ACpCF;AD2CA;EACE;EACA;EAEA;EACA;AC1CF;ADiDA;EACE;EACA;EAEA;EACA;AChDF;ADsDA;EACE;EACA;EAEA;EACA;ACrDF;ACzCA;EAXE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAqB;EACrB;ADwDF;;AEjEA;;;;;;;;;;;;0CAAA;ACAA;;;;;0CAAA;AAeA;;0CAAA;ACfA;;;;;0CAAA;ACAA;EFQE,kBEPkB;EFQlB,OAFsC;EAGtC,MAH+C;EAI/C,WAJ0D;EAK1D,YALyE;EELzE;EACA;ALoGF;;AMvGA;EACE;EACA;EACA;AN0GF;;AA7FA;EACE;EACA;EACA;EACA;AAgGF,C","sources":["webpack://minemark/./src/styles/abstract/fonts.scss","webpack://minemark/./src/styles/app.scss","webpack://minemark/./src/styles/abstract/mixins/a11y.scss","webpack://minemark/./src/styles/abstract/mixins/mq.scss","webpack://minemark/./src/styles/abstract/mixins/position.scss","webpack://minemark/./src/styles/abstract/mixins/pseudo.scss","webpack://minemark/./src/styles/layout/navigation/header.scss","webpack://minemark/./src/styles/layout/hero/base-hero.scss"],"sourcesContent":["$playfair: 'Playfair Display', serif;\n$inter: 'Inter', sans;\n$noto: 'noto-serif', serif;\n\n\n\n\n@font-face {\n  font-family: 'noto-serif';\n  src: url('../../assets/fonts/notoserif-black-webfont.woff2') format('woff2'),\n       url('../../assets/fonts/notoserif-black-webfont.woff') format('woff');\n  font-weight: 900;\n  font-style: normal;\n}\n\n\n\n\n@font-face {\n  font-family: 'noto-serif';\n  src: url('../../assets/fonts/notoserif-bold-webfont.woff2') format('woff2'),\n       url('../../assets/fonts/notoserif-bold-webfont.woff') format('woff');\n  font-weight: 700;\n  font-style: normal;\n\n}\n\n\n\n\n@font-face {\n  font-family: 'noto-serif';\n  src: url('../../assets/fonts/notoserif-extrabold-webfont.woff2') format('woff2'),\n       url('../../assets/fonts/notoserif-extrabold-webfont.woff') format('woff');\n  font-weight: 800;\n  font-style: normal;\n\n}\n\n\n\n\n@font-face {\n  font-family: 'noto-serif';\n  src: url('../../assets/fonts/notoserif-extralight-webfont.woff2') format('woff2'),\n       url('../../assets/fonts/notoserif-extralight-webfont.woff') format('woff');\n  font-weight: 200;\n  font-style: normal;\n\n}\n\n\n\n\n@font-face {\n  font-family: 'noto-serif';\n  src: url('../../assets/fonts/notoserif-light-webfont.woff2') format('woff2'),\n       url('../../assets/fonts/notoserif-light-webfont.woff') format('woff');\n  font-weight: 300;\n  font-style: normal;\n\n}\n\n\n\n\n@font-face {\n  font-family: 'noto-serif';\n  src: url('../../assets/fonts/notoserif-medium-webfont.woff2') format('woff2'),\n       url('../../assets/fonts/notoserif-medium-webfont.woff') format('woff');\n  font-weight: 500;\n  font-style: normal;\n\n}\n\n\n\n\n@font-face {\n  font-family: 'noto-serif';\n  src: url('../../assets/fonts/notoserif-regular-webfont.woff2') format('woff2'),\n       url('../../assets/fonts/notoserif-regular-webfont.woff') format('woff');\n  font-weight: 400;\n  font-style: normal;\n\n}\n\n\n\n\n@font-face {\n  font-family: 'noto-serif';\n  src: url('../../assets/fonts/notoserif-semibold-webfont.woff2') format('woff2'),\n       url('../../assets/fonts/notoserif-semibold-webfont.woff') format('woff');\n  font-weight: 500;\n  font-style: normal;\n}\n\n\n\n\n@font-face {\n  font-family: 'noto-serif';\n  src: url('../../assets/fonts/notoserif-thin-webfont.woff2') format('woff2'),\n       url('../../assets/fonts/notoserif-thin-webfont.woff') format('woff');\n  font-weight: 100;\n  font-style: normal;\n}","\n@import\n  'abstract/fonts',\n  'abstract/mixins/a11y',\n  'abstract/mixins/mq',\n  'abstract/mixins/position',\n  'abstract/mixins/pseudo',\n  'abstract/mixins/transitions';\n\n@import\n  'layout/navigation/header',\n  'layout/hero/base-hero',\n  'layout/hero/homepage-hero';\n\n\n\nhtml, body {\n  padding: 0;\n  margin: 0;\n  font-size: 16px; // 1rem\n  scroll-behavior: smooth;\n}\n","@mixin screenreader () {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap; /* added line */\n  border: 0;\n}\n\n.screenreader {\n  @include screenreader();\n}","/* ----------------------------------------\n  Usage mobile first\n\n  @include mq('tablet','min')\n\n  Usage Mobile last\n\n  @include mq('tablet','max')\n\n  Usage to-from\n\n  @include mq('tablet', 'to', 'desktop')\n---------------------------------------- */\n\n@mixin mq($breakpoint, $from, $breakpointto:6000) {\n\n  @if map-has-key($breakpoints, $breakpoint) {\n    @if $from == 'min' {\n      @media (min-width: map-get($breakpoints, $breakpoint)) {\n        @content;\n      }\n    }\n    @else if $from == 'max' {\n      @media (max-width: map-get($breakpoints, $breakpoint)) {\n        @content;\n      }\n    }\n    @else if $from == 'to' {\n      $min : map-get($breakpoints, $breakpoint);\n      $max : map-get($breakpoints, $breakpointto);\n      @media (min-width: $min) and (max-width: $max) {\n        @content;\n      }\n    }\n  }\n\n  // If the key doesn't exist in the map\n  @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n      + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n  }\n}\n","/* ----------------------------------------\n  Simplifies an standardizes positioning of elements\n\n  Usage: @include position('relative', 0px, px);\n\n---------------------------------------- */\n\n@mixin position($type: relative, $left: 0, $top: 0, $right: auto, $bottom: auto) {\n  position: $type;\n  left: $left;\n  top: $top;\n  right: $right;\n  bottom: $bottom;\n}\n\n/* ----------------------------------------\n  JUST an easy way to center using flexbox\n---------------------------------------- */\n\n@mixin flex-center($direction: 'center') {\n  display: flex;\n\n  @if $direction == 'horizontal' {\n    justify-content: center;\n  }\n  @else if $direction == 'vertical' {\n    align-items: center;\n  }\n  @else if $direction == 'center' {\n    align-items: center;\n    justify-content: center;\n  }\n  @else {\n    align-items: center;\n    justify-content: center;\n  }\n}","/* ----------------------------------------\n  Simplifies adding a Pseudo (:before and :after) element\n\n  Usage: @include pseudo();\n\n---------------------------------------- */\n\n@mixin pseudo() {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n}",".site-header {\n  @include position(absolute);\n  z-index: 2;\n  width: 100%;\n}",".hero {\n  height: calc(100vh - 9rem);\n  width: 100vh;\n  background: #AED0D2;\n}"],"names":[],"sourceRoot":""}